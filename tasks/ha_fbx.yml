---
- hosts:
    - 127.0.0.1
  become: yes
  vars:
    ha_user: ha
    ha_port: 8123
    #ha_conf_dir: /opt/home-assistant
    ha_fbx:
      hostname: "{{ lookup('env', 'HOSTNAME') | default('ha_fbx', true) }}"
      version: "{{ lookup('env', 'VERSION') | default('master', true) }}"
    packages:
      apt:
        install:
          - python3-pip
          - apparmor-utils
          - apt-transport-https
          - avahi-daemon
          - ca-certificates
          - curl
          - dbus
          - jq
          - socat
          - software-properties-common

  tasks:
    - name: change hostname
      hostname:
        name: "{{ha_fbx.hostname}}"
      when: lookup('file', '/etc/hostname') == "debian"
      register: hostname

    - name: add hostname to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.1\.1[ \t]+debian'
        line: "127.0.1.1\t{{ha_fbx.hostname}}"
        state: present
      when: hostname.changed

    - name: update apt package cache
      apt:
        update_cache: yes

    #- name: upgrade apt distro
    #  apt:
    #    upgrade: dist

    - name: install packages
      apt:
        name: "{{ packages.apt.install }}"
        state: present

    - name: remove useless packages from the cache
      apt:
        autoclean: yes

    - name: remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: clean apt cache
      command: apt-get clean
      become: yes

    - name: collect python pip package list
      command: "pip3 list"
      register: pip_output

    - name: set python pip package facts
      set_fact:
        pip_packages: >
          {{ pip_packages | default({}) | combine( { item.split()[0]: item.split()[1] } ) }}
      with_items: "{{ pip_output.stdout_lines }}"

    - name: docker setup
      command: "curl -fsSL get.docker.com | sh"

    - name: ha setup
      command: "curl -sL 'https://raw.githubusercontent.com/home-assistant/hassio-installer/master/hassio_install.sh' | bash -s -- -m qemuarm-64"

    #- name: create user
    #  user: name={{ ha_user }} comment="Home Assistant" createhome=no system=yes shell="/sbin/nologin"

    #- name: create directory
    #  file: path={{ ha_conf_dir }} state=directory mode=02775 owner={{ ha_user }} group={{ ha_user }}

    - name: clean apt cache
      apt:
        autoclean: yes

    - name: remove dependencies that are no longer required
      apt:
        autoremove: yes

  handlers:
    - name: reload systemd services
      systemd:
        daemon_reload: yes
